[General]

# debug-on-errors = true
# record-eventlog = true
print-undisposed = true

# output-vector-file = results/simulation.vec
# output-scalar-file = results/simulation.sca

sim-time-limit = 1500s
network = artery.inet.World
*.withStoryboard = true
*.storyboard.python = "demo"
*.traci.launcher.additionalOptions = "--log-buffered --log-file=sumo_warnings.log"

*.traci.core.version = -1
*.traci.launcher.typename = "PosixLauncher"
*.traci.launcher.sumocfg = "Slott.sumo.cfg"
*.traci.launcher.sumo = "sumo-gui"

*.node[*].wlan[*].typename = "VanetNic"
*.node[*].wlan[*].radio.channelNumber = 180
*.node[*].wlan[*].radio.carrierFrequency = 5.9 GHz
*.node[*].wlan[*].radio.transmitter.power = 200 mW
**.vector-recording = true
*.node[*].scalar-recording = true

*.node[*].middleware.updateInterval = 0.1s
*.node[*].middleware.datetime = "2025-03-10 00:00:00"
*.node[*].middleware.services = xmldoc("services.xml")
*.node[*].middleware.DenService.useCases = xmldoc("den-use-cases.xml")

[Config fingerprint_full]
*.traci.core.version = 16
fingerprint-modules = "World.node[*].*"
fingerprint = a447-93c5/tplx, 5503-eb3c/szv

[Config fingerprint_logic]
*.traci.core.version = 16
fingerprint-modules = "World.node[*].*"
fingerprint = baf8-0977/tpe

[Config repeat]
description = "check if storyboard runs properly when initialised repeatedly"
sim-time-limit = 3s
repeat = 2

[Config veins]
network = artery.veins.World
*.playgroundSizeX = 2000m
*.playgroundSizeY = 1200m
*.playgroundSizeZ = 50m

*.connectionManager.maxInterfDist = 500m
*.connectionManager.sendDirect = true
*.connectionManager.coreDebug = false

#**.mobilityModule.vector-recording = true
#**.messageDelay.vector-recording = true
#**.collisionModule.vector-recording = true


*.node[*].nic.mac1609_4.txPower = 200mW
*.node[*].nic.phy80211p.decider = xmldoc("config.xml")
*.node[*].nic.phy80211p.analogueModels = xmldoc("config.xml")

*.node[*].appl.middleware.updateInterval = 0.1s
*.node[*].appl.middleware.datetime = "2025-03-10 00:00:00"
*.node[*].appl.middleware.services = xmldoc("services.xml")
*.node[*].appl.middleware.DenService.useCases = xmldoc("den-use-cases.xml")